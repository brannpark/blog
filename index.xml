<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>개발지식저장소</title>
    <link>http://brannpark.github.io/blog/</link>
    <description>Recent content on 개발지식저장소</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright(c) by Brann Park. All right reserved.</copyright>
    <lastBuildDate>Fri, 22 Mar 2019 10:31:57 +0900</lastBuildDate>
    
	<atom:link href="http://brannpark.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Swift iOS 기본 인터뷰 질문에 대한 정리글</title>
      <link>http://brannpark.github.io/blog/post/20190322_swift_ios_interview_qna/</link>
      <pubDate>Fri, 22 Mar 2019 10:31:57 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20190322_swift_ios_interview_qna/</guid>
      <description>웹서핑을 하다가 우연히, 어떤 회사의 어떤 면접관이 올려놓은 기술 인터뷰 질문 목록을 보았다. 음.. 아무리 기본에 대한 거라지만 기술면접질문을 공개하다니.. 실</description>
    </item>
    
    <item>
      <title>RxSwift retain self</title>
      <link>http://brannpark.github.io/blog/post/20190306_rxswift_retain_self/</link>
      <pubDate>Wed, 06 Mar 2019 13:35:23 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20190306_rxswift_retain_self/</guid>
      <description>RxSwift 의 클로저에서의 self retain 에 대해 정리해보고자 한다. RxSwift 다음과 같은 코드를 살펴보자. class TestViewController : UIViewController { private let disposeBag = DisposeBag() func viewDidLoad() { super.viewDidLoad() Observable.just(0) .delay(5, scheduler: MainScheduler.asyncInstance) .subscribe(onNext: { value in self.test(value) }, onDisposed: { self.test() }) .disposed(by: disposeBag) } func test(_ value:</description>
    </item>
    
    <item>
      <title>iOS10&#43; 노티피케이션 정리</title>
      <link>http://brannpark.github.io/blog/post/20180615_ios10plus_notification/</link>
      <pubDate>Fri, 15 Jun 2018 15:10:28 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20180615_ios10plus_notification/</guid>
      <description>UserNotifications Framework iOS10 부터는 UserNotifications 라는 새로운 사용자 노티피케이션 프레임워크가 제공된다. 사용자 노티피케이션.. 그렇다면 우리가 컴포넌트간 메시지를 보낼 때 쓰는 NotificationCenter 는 시스템 노</description>
    </item>
    
    <item>
      <title>iOS_Adhoc_아카이브와 크래시리틱스, 그리고 Bitcode</title>
      <link>http://brannpark.github.io/blog/post/20180605_ios_adhoc_distribution_archive_and_crashlytics/</link>
      <pubDate>Tue, 05 Jun 2018 16:12:15 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20180605_ios_adhoc_distribution_archive_and_crashlytics/</guid>
      <description>오랫만의 포스팅! 회사를 옮기고 나서 어찌어찌 하다보니 iOS 개발을 맡게 되었다. 현 팀에서는 사내에 별도록 구축된 앱 빌드 &amp;amp; 배포 서비스를 이용하고 있었고, 앱 크래시</description>
    </item>
    
    <item>
      <title>안드로이드 앱 실행속도 최적화</title>
      <link>http://brannpark.github.io/blog/post/20171031_android_launch_process/</link>
      <pubDate>Fri, 13 Oct 2017 16:25:46 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20171031_android_launch_process/</guid>
      <description>안드로이드 앱이 실행이 될때, 세가지의 다른 실행 상태가 존재한다. Cold start (차가운 시작) Hot start (따듯한 시작) Warm Start (미지근한 시작) 앱 실행 성능을 개선하기 위해서</description>
    </item>
    
    <item>
      <title>Emacs, Mac osx 클립보드 공유</title>
      <link>http://brannpark.github.io/blog/post/20170719_share_clipboard_buffer_share_with_macosx_and_emacs/</link>
      <pubDate>Wed, 19 Jul 2017 14:45:52 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20170719_share_clipboard_buffer_share_with_macosx_and_emacs/</guid>
      <description>가끔 Mac 에서 Emacs 를 쓸 때, OS 의 clipboard 가 Emacs 의 clipboard(?) 가 별도의 공간이어서 불편함을 느꼈던 적이 많았다. 붙여넣기야&amp;hellip; Cmd + V 를 이용하면 된다지만, Emacs 상의 텍스</description>
    </item>
    
    <item>
      <title>Emacs Keybinding for Mac osx</title>
      <link>http://brannpark.github.io/blog/post/20161011_xcode_emacs_keybinding/</link>
      <pubDate>Tue, 11 Oct 2016 14:52:05 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20161011_xcode_emacs_keybinding/</guid>
      <description>시작은.. Xcode 에 Emacs keybinding 적용해보기! Xcode 는 기본적으로 Emacs 키바인딩을 지원하지 않는다. Option 메타키를 사용하는것을 쉽사리 허용하지 않는데.. 이리저리 찾아보고 하다가</description>
    </item>
    
    <item>
      <title>Presenter First</title>
      <link>http://brannpark.github.io/blog/post/20160615_presenter_first/</link>
      <pubDate>Wed, 15 Jun 2016 19:20:21 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20160615_presenter_first/</guid>
      <description>Presenter First: TDD for Large, Complex Applications with Graphical User Interfaces Michael Marsiglia, Brian Harleton, Carl Erickson 번역: Brann Park 원문: https://atomicobject.com/uploadedImages/archive/files/PF_March2005.pdf Motivation GUI를 다루는것은 힘들다. 처음에는 매우 단순했던 것들이 어떻게 이리도 빠르게 거대해지고 복잡해</description>
    </item>
    
    <item>
      <title>안드로이드 앱 개발 시 주의사항</title>
      <link>http://brannpark.github.io/blog/post/20151204_notices_for_android_app_development/</link>
      <pubDate>Fri, 04 Dec 2015 14:46:07 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20151204_notices_for_android_app_development/</guid>
      <description>이 포스팅은 앞으로 쓰게 될 안드로이드 앱 개발 관련 주의사항 포스트들에 대한 게이트웨이 정도가 되겠다. 보통.. 이렇게 하면 좋다, 저렇게 하면 좋다라는 글들은 많고</description>
    </item>
    
    <item>
      <title>OSX El Capitan 개발환경 세팅</title>
      <link>http://brannpark.github.io/blog/post/20151202_elcapitan_setup/</link>
      <pubDate>Wed, 02 Dec 2015 18:46:37 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20151202_elcapitan_setup/</guid>
      <description>Kenny님이 작성하신 OSX El Capitan 개발환경 세팅 포스트 공유합니다. http://herblover.github.io/environments/mac/El-Capitan-Setup</description>
    </item>
    
    <item>
      <title>Made by HUGO and GitHub Pages</title>
      <link>http://brannpark.github.io/blog/post/20151201_hugo_with_github_pages/</link>
      <pubDate>Tue, 01 Dec 2015 15:36:31 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/20151201_hugo_with_github_pages/</guid>
      <description>일반적인 웹사이트의 경우, 여러 웹 컨텐츠들을 동적으로 생성하여 이용자에게 전달한다. 다시 말해서, 웹어플리케이션은 동적 컨텐츠를 정적 컨텐츠로 변환하는 과정</description>
    </item>
    
    <item>
      <title>블로그를 시작합니다</title>
      <link>http://brannpark.github.io/blog/post/new/</link>
      <pubDate>Tue, 01 Dec 2015 11:47:56 +0900</pubDate>
      
      <guid>http://brannpark.github.io/blog/post/new/</guid>
      <description>뭐.. 평소에도 계속 프로그래밍 관련 글들을 기록해놓는 블로그를 해볼까 했었습니다만, 생각보다 시작이 쉽지가 않더군요 ㅎㅎ.. Github Pages 를 이용한 static website 개설에 흥미가</description>
    </item>
    
  </channel>
</rss>